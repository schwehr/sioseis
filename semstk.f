      SUBROUTINE SEMSTK(ISTK,ISEM,IANS,ISCR,IDIV,N,N2,NDOWS,NINE,IFMT)
C     SEMSTK COMPUTES THE ENERGY OF A STACKED TRACE AND THEN DIVIDES IT BY THE
C  MEAN ENERGY.  THE STACKED TRACE AND THE MEAN ENERGY COMPUTATIONS MUST HAVE
C  BEEN DONE PRIOR TO CALLING SEMSTK (SEE SUBROUTINE STKSEM).
C
C  ARGUMENTS:
C    ISTK   - THE AP ADDRESS OF THE STACKED TRACE (THE NUMERATOR).
C    ISEM   - THE AP ADDRESS OF THE MEAN ENERGY (THE DIVISOR). THE FIRST ELEMENT
C             OF SEM CORRESPONDS TO THE CENTER OF A WINDOW THAT STARTS AT THE
C             FIRST ELEMENT OF ISTK.  THE SECOND ELEMENT CORRESPONDS TO THE
C             CENTER OF THE WINDOW THAT STARTS AT ISTK+N2).
C    IANS   - THE AP ADDRESS OF THE ANSWERS.
C    ISCR   - THE AP ADDRESS OF AN AP SCRATCH ARRAY
C    N      - THE WINDOW LENGTH (IN SAMPLES).
C    N2     - THE CENTER OF THE WINDOW (USUALLY HALF THE WINDOW LENGTH).
C    NDOWS  - THE NUMBER OF WINDOWS.
C    NINE   - THE AP ADDRESS OF THE NUMBER 9. (THE NUMBER TO SCALE TO).
C    IFMT   - THE TYPE OF DATA TO OUTPUT.
C           =1, MULTIPLY BY 9. AND CONVERT TO 16 BIT INTEGER. (THE RESULTS ARE
C     NOW RETURNED AS FLOATING POINT BECAUSE FPS VAX AND NUMERIX DO NOT HANDLE
C    INTEGERS CORRECTLY IN APGET)
C           =2, SCALE BY 9. (A PERFECT FIT WOULD BE 9.) AND RETURN AS FLOATING
C               POINT.
C           =3, NO SCALING AND RETURN AS FLOATING POINT.
C           =4, SCALE SO THAT THE MAXIMUM IS 9. AND RETURN AS 32 BIT INTEGERS.
C     LIKEWISE, THE ANSWERS ARE FLOATING POINT, NOT INTEGERS ANYMORE
C
C  WRITTEN AND COPYRIGHTED BY:
C  PAUL HENKART, SCRIPPS INSTITUTION OF OCEANOGRAPHY, 8 MAY 1981
C  ALL RIGHTS ARE RESERVED BY THE AUTHOR.  PERMISSION TO COPY OR REPRODUCE THIS
C  SUBROUTINE, BY COMPUTER OR OTHER MEANS, MAY BE OBTAINED ONLY FROM THE AUTHOR.
C
      IMPLICIT INTEGER (A-Z)
      STK=ISTK
      SEM=ISEM
      ANS=IANS
      SCR=ISCR
      I=0
   10 CALL VDIV(IDIV,0,STK,1,STK,1,N)                                   ! /* DIVIDE THE STACKED TRACE
      CALL SVESQ(STK,1,ANS,N)                                           ! /* FIND THE ENERGY OF A WINDOW
      I=I+1                                                             ! /* INCREMENT THE WINDOW COUNTER
      IF(I.GE.NDOWS) GO TO 20                                           ! /* ANY MORE WINDOWS
      STK=STK+N                                                         ! /* FIND THE BEGINNING OF THE NEXT WINDOW
      ANS=ANS+1                                                         ! /* INCREMENT THE RESULTS ADDRESS
      GO TO 10
   20 ANS=IANS                                                          ! /* RESET THE ANSWERS ADDRESS TO THE BEGINNING
      CALL VDIV(IDIV,1,SEM,1,SEM,1,NDOWS)
      IF(IFMT.EQ.3) SCR=ANS                                             ! /* PUT THE QUOTIENT INTO IANS
      CALL VDIV(SEM,1,ANS,1,SCR,1,NDOWS)                                ! /* ENERGY OF THE STACKED BY THE MEAN
      IF(IFMT.GE.4) GO TO 100
      IF(IFMT.EQ.3) RETURN
      CALL VSMUL(SCR,1,NINE,ANS,1,NDOWS)                                ! /* MULTIPLY BY THE SCALAR AT NINE
      IF(IFMT.EQ.2) RETURN
C   50 CALL VFIX32(ANS,1,ANS,1,ND)                                        ! /*  FIX AND CONVERT TO 32 BIT INTEGER
      RETURN
  100 CONTINUE
      CALL MAXMGV(SCR,1,ISTK,NDOWS)                                     ! /* FIND THE MAXIMUM VALUE
      CALL VDIV(ISTK,1,NINE,1,ISTK,1,1)                                 ! /* DIVIDE THE SCALAR BY THE MAXIMUM
      PRINT *,' **** WRONG PLACE IN SEMSTK!!!!',IFMT
      CALL VSMUL(SCR,1,ISTK,ANS,1,NDOWS)                                ! /* MULTIPLY BY THIS MULTIPLIER
C      GO TO 50
      RETURN
      END
