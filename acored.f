      SUBROUTINE ACORED(BUF,LBUF)
C                                    PROCESS ACORR (AUTOCORRELATION)
C                                    ------- -----
C
C  DOCUMENT DATE: 6 JULY 1981                                              46
C
C       PROCESS ACORR COMPUTES THE ONESIDED AUTOCORRELATION FUNCTION OF A TRACE.
C    ONLY POSITIVE LAGS OF THE AUTOCORRELATION ARE COMPUTED AND OUTPUT.  IF
C  MORE THAN ONE AUTOCORRELATION WINDOW IS SPECIFIED ON EACH TRACE, EACH
C  OUTPUT TRACE IS THE CONCATENATION OF ALL THE AUTOCORRELATIONS FOR THAT TRACE
C  THUS, THE OUTPUT LENGTH IS THE SUM OF THE LENGTHS OF THE INDIVIDUAL WINDOWS.
C     MORE THAN ONE AUTOCORRELATION WINDOW MAY BE GIVEN FOR EACH TRACE,  AND THE
C  WINDOWS MAY BE SPATIALLY VARIED BY SHOT OR RP OR BY HANGING THE WINDOWS ON
C  THE WATER BOTTOM.
C     ALL PARAMETERS THAT REMAIN CONSTANT FOR A SET OF SHOTS (RPS) MAY BE
C  DESCRIBED IN A PARAMETER SET FNO TO LNO.  WINDOWS BETWEEN TWO PARAMETER
C  SETS ARE CALCULATED BY LINEARLY INTERPOLATING BETWEEN LNO OF ONE SET AND FNO
C  OF THE NEXT SET.
C     EACH PARAMETER LIST MUST BE TERMINATED WITH THE WORD END.  THE ENTIRE SET
C  OF ACORR PARAMETERS MUST BE TERMINATED BY THE WORD END.
C
C  THE PARAMETER DICTIONARY
C  --- --------- ----------
C  FNO    - THE FIRST SHOT (OR RP) TO AUTOCORRELATE.  SHOT (RP) NUMBERS
C           MUST INCREASE MONOTONICALLY.
C           PRESET=1
C  LNO    - THE LAST SHOT (RP) NUMBER TO AUTOCORRELATE.  LNO MUST BE
C           LARGER THAN FNO IN EACH LIST AND MUST INCREASE LIST TO LIST.
C           DEFAULT=FNO
C  SETS   - START-END TIME PAIRS DEFINING THE AUTOCORRELATION WINDOWS.  TIMES
C           ARE IN SECONDS AND MAY BE NEGATIVE WHEN HANGING THE WINDOWS FROM THE
C           WATER BOTTOM.  A MAXIMUM OF 5 WINDOWS MAY BE GIVEN.
C           REQUIRED.
C  OLENS  - THE OUTPUT AUTOCORRELATION LENGTHS IN SECONDS.  THIS CORRESPONDS TO
C           THE NORMAL USE OF THE NUMBER OF LAGS TO COMPUTE, BUT IS IN UNITS OF
C           SECONDS.  EACH AUTOCORRELATION HAS IT'S OWN LENGTH.  A MAXIMUM OF
C           5 LENGTHS MAY BE GIVEN.
C           REQUIRED.
C  ADDWB  - WHEN GIVEN A VALUE OF YES, THE WINDOWS GIVEN VIA SETS WILL
C           BE ADDED TO THE WATER BOTTOM TIME OF THE TRACE.  (WATER BOTTOM TIMES
C           MAY BE ENTERED VIA PROCESS WBT).
C           PRESET=NO
C  END    - TERMINATES EACH PARAMETER LIST.
C
C WRITTEN AND COPYRIGHTED BY:
C   PAUL HENKART, SCRIPPS INSTITUTION OF OCEANOGRAPHY, JULY 1980
C
C  THE PARAMETER LIST ON DISC IS:
C  WORD 1)  FNO
C       2   LNO
C       3)  ADDWB
C       4)  LPRINT
C     5-9)  OLENS
C   10-19)  SETS
C
C
C  ARGUMENTS:
C  BUF    - A SCRATCH ARRAY AT LEAST 60 32 BIT WORDS LONG.
C  LBUF   - THE SAME ARRAY BUT THE 32 BIT INTEGER EQUIVALENT.  NEEDED
C           BECAUSE PRIME FORTRAN DOESN'T ALLOW EQUIVALENCING OF ARGUMENTS.
C
C
C
      PARAMETER (NPARS=6)                                               ! /* THE NUMBER OF USER PARAMETERS
      PARAMETER (MAX=10)                                                ! /* THE MAXIMUM NUMBER OF SETS FILTER CAN HANDLE
      PARAMETER (NWRDS=19)                                              ! /* THE NUMBER OF WORDS IN EACH PARAMETER LIST
      PARAMETER (MULTI=5)                                               ! /* THE PARAMETER NUMBER OF THE FIRST MULTI-VALUED PARAMETER
      CHARACTER*6 NAMES(NPARS)
      CHARACTER*1 TYPES(NPARS)
      DIMENSION LENGTH(NPARS)
      CHARACTER*80 TOKEN
      DIMENSION VALS(NPARS),LVALS(NPARS)
      COMMON /EDITS/ IERROR,IWARN,IRUN,NOW,ICOMPT
      EQUIVALENCE (VALS(1),LVALS(1))
      COMMON /ACOR/ MUNIT,NLISTS
      DIMENSION BUF(111),LBUF(111)
      INTEGER ADDWB,FNO
C
C
      EQUIVALENCE (FNO,LVALS(1)),
     2            (LNO,LVALS(2)),
     3            (ADDWB,LVALS(3)),
     4            (LPRINT,LVALS(4)),
     5            (OLENS,VALS(5)),
     6            (SETS,VALS(6))
      DATA NAMES/'FNO   ','LNO   ','ADDWB ','LPRINT','OLENS ',
     *   'SETS  '/
      DATA LENGTH/3,3,5,6,5,4/
      DATA TYPES/'L','L','A','L','F','F'/
C****
C****      SET THE PRESETS
C****
      FNO=1
      LNO=32768
      IADDWB=0
      LPRINT=0
      DO 10 I=5,9
   10 BUF(I)=-100.
      BUF(10)=-100.
      DO 20 I=11,19
   20 BUF(I)=0.
      IADDWB=0
      LLNO = 0
      NLISTS=0
      NS=0
C****
C****   GET A PARAMETER FILE
C****
      CALL GETFIL(1,MUNIT,TOKEN,ISTAT)
C****
C****   THE CURRENT COMMAND LINE IN THE SYSTEM BUFFER MAY HAVE THE PARAMETERS.
C****   GET A PARAMETER LIST FROM THE USER.
C****
      NTOKES=1
  100 CONTINUE
      CALL GETOKE(TOKEN,NCHARS)                                         ! /* GET A TOKEN FROM THE USER PARAMETER LINE
      CALL UPCASE(TOKEN,NCHARS)                                         ! /* CONVERT THE TOKEN TO UPPERCASE
      IF(NCHARS.GT.0) GO TO 150
      IF(NOW.EQ.1) PRINT 140
  140 FORMAT(' <  ENTER PARAMETERS  >')
      CALL RDLINE                                                       ! /* GET ANOTHER USER PARAMETER LINE
      NTOKES=0
      GO TO 100
  150 CONTINUE
      NTOKES=NTOKES+1
      DO 190 I=1,NPARS                                                  ! /* SEE IF IT IS A PARAMETER NAME
      LEN=LENGTH(I)                                                     ! /* GET THE LEGAL PARAMETER NAME LENGTH
      IPARAM=I                                                          ! /* SAVE THE INDEX
      IF(TOKEN(1:NCHARS).EQ.NAMES(I)(1:LEN).AND.NCHARS.EQ.LEN) GO TO 200
  190 CONTINUE                                                          ! /* STILL LOOKING FOR THE NAME
      IF(TOKEN(1:NCHARS).EQ.'END'.AND.NCHARS.EQ.3) GO TO 1000           ! /* END OF PARAM LIST?
      IF(NS.NE.0) GO TO 230
      PRINT 191, TOKEN(1:NCHARS)
  191 FORMAT(' ***  ERROR  *** ACORR DOES NOT HAVE A PARAMETER ',
     *  'NAMED ',A10)
      IERROR=IERROR+1
      GO TO 100
C****
C****    FOUND THE PARAMETER NAME, NOW FIND THE VALUE
C****
  200 CONTINUE
      NS=0
      NPARAM=IPARAM
  210 CONTINUE                                                          ! /*  NOW FIND THE VALUE
      CALL GETOKE(TOKEN,NCHARS)
      CALL UPCASE(TOKEN,NCHARS)
      NTOKES=NTOKES+1
      IF(NCHARS.GT.0) GO TO 230                                         ! /* END OF LINE?
      IF(NOW.EQ.1) PRINT 140                                            ! /* THIS ALLOWS A PARAMETER TO BE ON A DIFFERENT LINE FROM THE NAME
      CALL RDLINE                                                       ! /* GET ANOTHER LINE
      NTOKES=0
      GO TO 210
  230 CONTINUE
      IF(TYPES(NPARAM).NE.'A') GO TO 240
      IF(NAMES(NPARAM).EQ.'ADDWB'.AND.TOKEN(1:3).EQ.'YES'.AND.
     &      NCHARS.EQ.3) IADDWB=1
      GO TO 100
  240 CONTINUE
      CALL DCODE(TOKEN,NCHARS,AREAL,ISTAT)                              ! /* TRY AND DECODE IT
      IF(ISTAT.EQ.2) GO TO 420                                          ! /* =2 MEANS IT IS A NUMERIC
      IERROR=IERROR+1                                                   ! /* DCODE PRINTED AN ERROR
      GO TO 100
  420 IF(TYPES(NPARAM).EQ.'L') GO TO 500
      IF(NPARAM.LT.MULTI) GO TO 490                                     ! /*  IS IT A MULTIVALUED PARAMETER
      NS=NS+1                                                           ! /*  THE TOKEN WAS A MULTI-VALUED PARAMETER
      IF(NAMES(NPARAM).EQ.'OLENS') ITEMP=4
      IF(NAMES(NPARAM).EQ.'SETS') ITEMP=9
      BUF(NS+ITEMP)=AREAL
      GO TO 100
  490 VALS(NPARAM)=AREAL                                                ! /*  FLOATING POINT VALUES
      GO TO 100
  500 CONTINUE                                                          ! /*  32 BIT INTEGER VALUES
      LVALS(NPARAM)=AREAL
      GO TO 100
C****
C****   FINISHED A LIST, NOW DO THE ERROR AND VALIDITY CHECKS
C****
 1000 CONTINUE                                                          ! /* MAKE SURE ALL SHOT & RP NUMBERS INCREASE
      IF(LNO.EQ.32768) LNO=FNO                                          ! /* DEFAULT LNO TO FNO
      IF(FNO.GT.LLNO) GO TO 1020                                        ! /*  IS FNO LARGER THAN THE LAST LNO
      PRINT 1010
 1010 FORMAT(' ***  ERROR  ***  SHOT AND RP NUMBERS MUST INCREASE.')
      IERROR=IERROR+1
 1020 IF(LNO.GE.FNO) GO TO 1030                                         ! /* DO THEY INCREASE IN THIS LIST
      PRINT 1010
      IERROR=IERROR+1
 1030 LLNO=LNO
 1100 CONTINUE                                                          ! /* CHECK SET FOR VALIDITY
      DO 1120 I=10,19                                                   ! /* ALLOW NEGATIVE TIMES FOR HANGING FROM WATER BOTTOM
      IF(BUF(I).EQ.0.) GO TO 1120                                       ! /* WAS IT GIVEN
      IF(ABS(BUF(I)).LT.20.) GO TO 1110
      PRINT 1105,BUF(I)
 1105 FORMAT(' ***  WARNING  *** WINDOW TIME OF ',F10.4,
     *   ' LOOKS WRONG. (NOT FATAL)')
      IWARN=IWARN+1
 1110 CONTINUE
      IF(MOD(I,2).EQ.0) GO TO 1112
      IF(BUF(I)-BUF(I-1).GT..3) GO TO 1114
      PRINT 1111
 1111 FORMAT(' ***  WARNING  ***  THERE IS AN UNUSUALLY SHORT',
     *   ' WINDOW.')
      IWARN=IWARN+1
      GO TO 1114
 1112 CONTINUE
      IF(I.EQ.10) GO TO 1114                                            ! /* MAKE SURE THE WINDOWS ARE SEPARATED
      IF(BUF(I).GT.BUF(I-1)+.1) GO TO 1114
      PRINT 1113
 1113 FORMAT(' ***  WARNING  ***  WINDOWS SHOULD BE AT LEAST',
     *  ' .1 SECOND APART.')
      IWARN=IWARN+1
 1114 CONTINUE
 1120 CONTINUE
 1200 CONTINUE                                                          ! /* NOW CHECK THE FILTER LENGTHS
      IF(BUF(5).NE.-100.) GO TO 1204
      PRINT 1202
 1202 FORMAT(' ***  ERROR  ***  OLENS MUST BE GIVEN.')
      IERROR=IERROR+1
      GO TO 1230
 1204 DO 1220 I=5,9                                                     ! /*  CHECK ON OLENS
      IF(BUF(I).EQ.-100.) BUF(I)=BUF(I-1)
      IF(BUF(I).GT.0.) GO TO 1210
      PRINT 1205,BUF(I)
 1205 FORMAT(' ***  ERROR  ***  ILLEGAL LENGTH OF ',F10.3)
      IERROR=IERROR+1
 1210 CONTINUE
 1220 CONTINUE
 1230 CONTINUE
C****
C****      WRITE THE PARAMETER LIST TO DISC
C****
      IF(NS.LE.MAX) GO TO 1360
      ITEMP=MAX
      PRINT 1350,ITEMP
 1350 FORMAT(' ***  ERROR  ***  ACORR CAN HANDLE ONLY ',I3,' SETS.')
      IERROR=IERROR+1
 1360 CONTINUE
      LBUF(1)=FNO
      LBUF(2)=LNO
      LBUF(3)=IADDWB
      LBUF(4)=LPRINT
      IF(IAND(LPRINT,1).EQ.1)  PRINT 2010,(LBUF(I),I=1,4),
     *   (BUF(J),J=5,19)
 2010 FORMAT(' ACORR PARAMS:',/,4(1X,I10),/,5(10(1X,F10.3),/))
      CALL WRDISC(MUNIT,BUF,NWRDS)
      NLISTS=NLISTS+1
      LLNO=LNO
      LNO=32768                                                         ! /* DEFAULT THE DEFAULTS
      NS=0                                                              ! /* SET THE NUMBER OF MULTI-VALUED PARAMETER ENTRIES BACK TO ZER0
 2020 CALL GETOKE(TOKEN,NCHARS)                                         ! /* GET THE NEXT TOKEN
      CALL UPCASE(TOKEN,NCHARS)
      NTOKES=NTOKES+1
      IF(NCHARS.GT.0) GO TO 2030                                        ! /* WAS IT THE END OF A LINE?
      IF(NOW.EQ.1) PRINT 140
      CALL RDLINE                                                       ! /* GET ANOTHER LINE
      NTOKES=0
      GO TO 2020
 2030 IF(TOKEN(1:NCHARS).NE.'END'.OR.NCHARS.NE.3) GO TO 150
      RETURN                                                            ! /*  FINISHED ALL OF THE PARAMETERS!!!
      END
